name: Full CI/CD to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPO: 637423217175.dkr.ecr.ap-south-1.amazonaws.com/my-web-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # -----------------------------
    # Install Terraform
    # -----------------------------
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    # -----------------------------
    # Install Helm
    # -----------------------------
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.0

    # -----------------------------
    # Configure AWS credentials
    # -----------------------------
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # -----------------------------
    # Terraform apply
    # -----------------------------
    - name: Terraform Init & Apply
      run: |
        terraform init
        terraform apply -auto-approve

    # -----------------------------
    # Build Docker image
    # -----------------------------
    - name: Build Docker image
      run: docker build -t my-web-app:latest .

    # -----------------------------
    # Login to ECR
    # -----------------------------
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ env.ECR_REPO }}

    # -----------------------------
    # Tag and Push Docker image
    # -----------------------------
    - name: Tag and Push Docker image
      run: |
        docker tag my-web-app:latest ${{ env.ECR_REPO }}:latest
        docker push ${{ env.ECR_REPO }}:latest

    # -----------------------------
    # Configure kubeconfig for EKS
    # -----------------------------
    - name: Configure kubectl for EKS
      run: |
        aws eks update-kubeconfig \
          --name ankit-eks-cluster \
          --region ${{ env.AWS_REGION }}

    - name: Verify cluster access
      run: kubectl get nodes

    # -----------------------------
    # Helm deploy your sample app
    # -----------------------------
    - name: Helm Upgrade / Install App
      working-directory: ./my-sample-app
      run: |
        helm upgrade --install my-web-app . \
          --set image.repository=${{ env.ECR_REPO }} \
          --set image.tag=latest